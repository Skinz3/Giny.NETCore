using Giny.Core;
using Giny.ORM;
using Giny.World.Records.Achievements;
using Giny.World.Records.Maps;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Giny.DatabasePatcher.Achievements
{
    public class SubareaAchievements
    {
        private static Dictionary<long, int> AchievementSubareas = new Dictionary<long, int>()
        {
            {1,260 },
            {2,245 },
            {3,248 },
            {4,242 },
            {5,253 },
            {6,251 },
            {8,237 },
            {9,243 },
            {10,255 },
            {11,268 },
            {12,247 },
            {22,236 },
            {23,246 },
            {25,271 },
            {27,240 },
            {29,264 },
            {30,281 },
            {31,254 },
            {32,282 },
            {33,284 },
            {34,280 },
            {43,287 },
            {54,309 },
            {55,314 },
            {56,305 },
            {57,336 },
            {59,302 },
            {61,334 },
            {68,308 },
            {69,301 },
            {70,313 },
            {71,335 },
            {93,277 },
            {95,341 },
            {96,344 },
            {97,345 },
            {98,340 },
            {99,359 },
            {100,360 },
            {102,249 },
            {103,267 },
            {161,272 },
            {162,275 },
            {163,273 },
            {164,274 },
            {165,276 },
            {166,279 },
            {167,278 },
            {168,285 },
            {169,283 },
            {170,259 },
            {173,358 },
            {178,312 },
            {179,252 },
            {180,250 },
            {181,266 },
            {182,381 },
            {209,382 },
            {230,374 },
            {231,376 },
            {232,377 },
            {233,378 },
            {234,375 },
            {235,379 },
            {253,373 },
            {275,380 },
            {276,238 },
            {277,269 },
            {279,288 },
            {280,319 },
            {314,263 },
            {315,270 },
            {316,265 },
            {319,383 },
            {334,300 },
            {335,339 },
            {442,414 },
            {443,417 },
            {444,415 },
            {445,420 },
            {446,424 },
            {448,423 },
            {449,251 },
            {450,422 },
            {451,385 },
            {453,390 },
            {454,391 },
            {455,386 },
            {457,393 },
            {461,387 },
            {464,394 },
            {465,389 },
            {466,388 },
            {469,395 },
            {471,392 },
            {472,384 },
            {479,262 },
            {480,257 },
            {481,239 },
            {482,244 },
            {485,241 },
            {490,261 },
            {492,258 },
            {495,333 },
            {517,338 },
            {518,307 },
            {519,304 },
            {521,310 },
            {522,316 },
            {523,303 },
            {525,317 },
            {526,337 },
            {600,404 },
            {601,396 },
            {602,406 },
            {603,405 },
            {604,398 },
            {605,399 },
            {606,397 },
            {608,407 },
            {609,401 },
            {610,409 },
            {611,403 },
            {615,402 },
            {625,400 },
            {626,408 },
            {650,413 },
            {651,412 },
            {652,411 },
            {753,410 },
            {778,419 },
            {785,909 },
            {786,908 },
            {787,907 },
            {788,906 },
            {789,905 },
            {795,904 },
            {799,1038 },
            {801,1037 },
            {804,1027 },
            {805,1028 },
            {806,1029 },
            {812,1039 },
            {813,1046 },
            {827,1110 },
            {828,1111 },
            {829,1112 },
            {834,1135 },
            {836,1176 },
            {837,1177 },
            {838,1178 },
            {855,1428 },
            {856,1429 },
            {857,1430 },
            {861,1502 },
            {863,1504 },
            {864,1505 },
            {865,1506 },
            {866,1507 },
            {867,1508 },
            {868,1509 },
            {872,1525 },
            {873,1526 },
            {874,1524 },
            {878,1549 },
            {879,1550 },
            {881,1551 },
            {883,1581 },
            {886,1604 },
            {889,1603 },
            {892,1631 },
            {896,1632 },
            {897,1633 },
            {902,1680 },
            {917,2113 },
            {925,2295 },
            {926,2294 },
            {927,2296 },
            {928,2293 },
            {941,3050 },
            {942,3048 },
            {943,3051 },
            {944,3049 },
            {945,3052 },
            {951,3047 },
            {952,3053 },
            {955,3081 },
            {956,3102 },
            {957,3103 },
            {967,5080 },
            {969,5079 },
            {971,5202 },
            {973,5178 },
            {974,5179 },
            {975,5177 },
            {976,5180 },
            {977,5185 },
            {978,5183 },
            {980,5186 },
            {982,5184 },
            {985,5182 },
            {1011,5176 },
            {1023,5918 },
            {1024,5919 },
            {1025,5921 },
            {1026,5920 },
            {1027,5923 },
            {1029,5924 },
            {1031,5922 },

        };



        public static void Patch()
        {
            Logger.Write("Patching subareas achivements...", Channels.Info);

            int count = 0;

            foreach (var subarea in SubareaRecord.GetSubareas())
            {
                if (AchievementSubareas.ContainsKey(subarea.Id))
                {
                    var achievementId = AchievementSubareas[subarea.Id];
                    var record = AchievementRecord.GetAchievement(achievementId);

                    if (record != null)
                    {
                        subarea.AchievementId = achievementId;
                        count++;
                    }
                    else
                    {
                        Logger.Write($"Cannot patch subarea : achievement {achievementId} cannot be found.", Channels.Warning);
                        subarea.AchievementId = -1;
                    }
                }
                else
                {
                    subarea.AchievementId = -1;
                }

                subarea.ReloadMembers();
                subarea.UpdateNow();
            }

            Logger.Write(count + " subarea achievements added.");
        }
    }
}
