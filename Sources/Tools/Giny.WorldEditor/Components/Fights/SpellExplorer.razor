@using Giny.Protocol.Enums
@using Giny.World.Managers.Effects
@using Giny.World.Records.Monsters
@using Giny.World.Records.Spells
@using Microsoft.AspNetCore.Components.Web.Virtualization


<MudGrid>
    <MudItem xs="3">
        <MudPaper Outlined=true>
            <MudList Color="Color.Primary" Dense="true" Clickable="true">
                <MudListSubheader>
                    <MudTextField Label="Search" TextChanged=OnSearchTextChanged @bind-Value="@Search"
                                  AdornmentColor="Color.Primary" AdornmentIcon="@Icons.Filled.Search"
                                  Adornment="Adornment.End" Immediate="true" Variant="Variant.Outlined" />
                </MudListSubheader>

                <div style="height:70vh;overflow-y:scroll">
                    <Virtualize Items="@SearchResults">
                        <MudListItem Typo="Typo.body2" OnClick="() => spellComponent.SelectSpell(context)" Text=@context.ToString() />
                    </Virtualize>
                </div>

            </MudList>

        </MudPaper>

    </MudItem>

    <MudItem xs="9">
        <SpellComponent @ref="spellComponent"></SpellComponent>
    </MudItem>


</MudGrid>


@code {

    [Inject]
    private IDialogService DialogService
    {
        get;
        set;
    }

    private List<SpellRecord> SearchResults
    {
        get;
        set;
    } = new List<SpellRecord>();

    private string Search
    {
        get;
        set;
    } = "";

    private SpellComponent? spellComponent;

    private void OnSearchTextChanged()
    {
        SearchResults = SpellRecord.GetSpellRecords().Where(x => x.ToString().ToLower().Contains(Search.ToLower())).ToList();

        StateHasChanged();
    }
    protected override void OnAfterRender(bool firstRender)
    {
       
    }


}