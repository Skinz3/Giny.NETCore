@using Giny.Core.IO.Configuration;
@using Giny.Uplauncher.Components.Dialogs;
@using Giny.Zaap;
@using Microsoft.AspNetCore.Components.Web
@using MudBlazor
@using System.Diagnostics;
@using Giny.Zaap.Accounts;
@page "/home"

@inject IDialogService DialogService
@inherits LayoutComponentBase

<style>

    .dialog-open {
        backdrop-filter: blur(5px);
    }

    body {
        overflow: hidden;
        
    }

    .play-button {
        background-color: rgb(230,230,230);
        border-radius: 24px;
    }

    .container {
        background-color: rgba(30,30,30,0.6);
        border-radius: 24px;
        padding: 12px;
        display: flex;
        backdrop-filter: blur(5px);
        flex-direction: column;
        gap: 10px;
    }

</style>
<MudThemeProvider Theme="AppState.GinyTheme" @bind-IsDarkMode="@DarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />


<MudLayout Style="display:flex;flex-grow:1;flex-direction:column;height:100vh;">

    <MudPaper>
        <MudToolBar @onmousedown=OnMouseDown>

            <MudAvatar Class="ms-2" Color="Color.Primary">
                <MudImage Src="https://i.imgur.com/WJITCaD.png"></MudImage>
            </MudAvatar>
            @if (MainAccount != null)
            {
                <div class="d-flex flex-column pl-4 pr-2 justify-center">
                    <MudText Style="font-weight:500;line-height:15px">@MainAccount.Username</MudText>
                    <MudText Style="line-height:15px" Typo="Typo.caption">@MainAccount.Nickname</MudText>
                </div>
            }
            <MudToggleIconButton @bind-Toggled=@DarkMode
                                 Icon="@Icons.Filled.LightMode" Title="Off"
                                 ToggledIcon="@Icons.Filled.DarkMode" ToggledTitle="On" />
            <MudIconButton OnClick="OpenSettings" Icon="@Icons.Material.Outlined.Settings" Color="Color.Inherit" />

            <MudSpacer />
            <MudIconButton OnClick="GoHome" Icon="@Icons.Material.Outlined.Home" Color="Color.Inherit" />


            <MudIconButton @onclick=Minimize Icon="@Icons.Material.Filled.Minimize" />
            <MudIconButton @onclick=Close Icon="@Icons.Material.Outlined.Close" />

        </MudToolBar>


    </MudPaper>


    <div class="d-flex flex-column flex-grow-1 ">
        <div class="" style="position:absolute;z-index:-1;width:100%;height:100%">
            <MudImage Style="filter:brightness(70%);" Fluid=true ObjectFit=ObjectFit.Fill ObjectPosition=ObjectPosition.Center
            @bind-Src=Config.Wallpaper></MudImage>

        </div>

        @if (AppState.Page == PageEnum.Home)
        {
            <HomeView Parent="this"></HomeView>
        }
        else if (AppState.Page == PageEnum.Login)
        {
            <LoginView Parent="this"></LoginView>
        }
        else if (AppState.Page == PageEnum.Register)
        {
            <RegisterView Parent="this"></RegisterView>
        }



    </div>









</MudLayout>


@code {



    private bool DarkMode
    {
        get;
        set;
    } = true;

    public UplConfig Config => ConfigManager<UplConfig>.Instance;

    public WebAccount? MainAccount => Config.GetSelectedAccount();

    void OpenSettings()
    {
        DialogHelper.OpenDialog<SettingsDialog>(DialogService, new DialogParameters<SettingsDialog>() { { x => x.MainLayout, this } }, "Paramètres");
    }
    void GoHome()
    {


        if (AppState.Page == PageEnum.Home)
        {
            return;
        }

        if ((AppState.Page == PageEnum.Login || AppState.Page == PageEnum.Register) && Config.Accounts.Count > 0)
        {
            Navigate(PageEnum.Home);
        }

        if (AppState.Page == PageEnum.Register && Config.Accounts.Count == 0)
        {

            Navigate(PageEnum.Login);
        }



    }
    void Minimize()
    {
        MainForm.Instance.WindowState = FormWindowState.Minimized;
    }
    void Close()
    {
        foreach (var process in Process.GetProcessesByName("Dofus"))
        {
            process.Kill();
        }

        MainForm.Instance.Close();
    }

    void OnMouseDown(MouseEventArgs args)
    {
        if (args.CtrlKey)
            MainForm.HandleMouseMove();
    }


    public void Navigate(PageEnum page)
    {
        AppState.Page = page;
        UpdateState();
    }

   



    public void UpdateState()
    {
        StateHasChanged();
    }
    protected override void OnInitialized()
    {
        ZaapServer.Instance.Start(AppState.Port, Config);

        UpdateState();

        if (Config.Accounts.Count > 0)
        {
            Navigate(PageEnum.Home);
        }
        else
        {
            Navigate(PageEnum.Login);
        }


    }


}

